// ==UserScript==
// @name         Bilimal Plus
// @namespace    noreehn.
// @version      2.3.1
// @description  Небольшие удобства для работы в электроном журнале school.bilimal.kz
// @author       https://t.me/noreehn
// @match        https://school.bilimal.kz/*
// @icon         https://raw.githubusercontent.com/nxreehn/bilimalX/main/bilimalXIcon.png
// @homepageURL  https://github.com/nxreehn/bilimalX/blob/main/README.md
// @updateURL    https://raw.githubusercontent.com/nxreehn/bilimalX/main/bilimalX
// @downloadURL  https://raw.githubusercontent.com/nxreehn/bilimalX/main/bilimalX
// @grant GM_setValue
// @grant GM_getValue
// @grant GM_setClipboard
// ==/UserScript==

///инфа о скрипте
(function () {
  // Проверяем, находится ли скрипт на нужной странице
  if (window.location.href ===
    'https://school.bilimal.kz/bilimalplus'
    ) {
    function changeAlert() {
      var newAlert = document
        .createElement('div');
      newAlert.innerHTML =
        '<div id="yw3"><div class="alert in alert-block alert-success"><a href="#" class="close" data-dismiss="alert">×</a><pre><span style="text-decoration: underline;"><strong>O Bilimal Plus:<br /></strong></span>Небольшой скрипт для удобства работы учителей в электронном журнале <em>Bilimal</em>.<br /><br /><span style="text-decoration: underline;"><strong>Основные функции скрипта</strong></span>:<br /><strong>+</strong> Возвращает "плюсики" в электронный журнал и даёт возможность выставить оценки в любое время.<br />Текущие оценки, оценки за СОР и СОЧ. (даже если 2 недели с проведения урока уже прошли)<br /><br /><strong><em>Текущие</em>:</strong><br /><img src="https://raw.githubusercontent.com/nxreehn/bilimalX/main/current%20marks.png" alt="Текущие оценки" width="1138" height="175" /><br /><strong><em>СОР и СОЧ</em>:<br /></strong><img src="https://raw.githubusercontent.com/nxreehn/bilimalX/main/sorsoch.png" alt="СОР и СОЧ" width="1133" height="297" /><br /><br /><strong>+</strong> Для ускорения работы добавлена кнопка для копирования всех тем в четверти.<br /><img src="https://raw.githubusercontent.com/nxreehn/bilimalX/main/copyktp.png" alt="Копировать КТП" width="872" height="109" /><br />Данная кнопка (<em>Копировать темы с этой четверти</em>) копирует все темы в открытой четверти в буфер обмена, благодаря чему вы можете скопировать все темы из общедоступного плана или своего же прошлогоднего и скопировать все темы в таблицу Excel чтобы в дальнейшем импортировать все темы с автоматической простановкой дат уроков.<br /><br /><strong>+</strong> Добавлена возможность скопировать домашнее задание в текущем открытом журнале успеваемости.<br /><strong>+</strong> Добавлена возможность импорта домашнего задания и автоматического проставления домашнего задания в поля ввода "<span style="text-decoration: underline;">Домашнее задание</span>" на странице с оценками в жернале успеваемости.<br /><img src="https://raw.githubusercontent.com/nxreehn/bilimalX/main/importdz.png" alt="Копирование и Импорт домашнего задания" width="574" height="48" /><br /><strong>+</strong> Небольшие косметические изменения.</pre></div>';
      var oldAlert = document
        .querySelector(
          '.alert.in.alert-block.fade.alert-info'
          );
      if (oldAlert) {
        oldAlert.parentElement
          .replaceChild(newAlert
            .firstChild, oldAlert);
      }
    }
    if (document.readyState ===
      'complete') {
      changeAlert();
    } else {
      window.addEventListener('load',
        changeAlert);
    }
  }
})();
///
//размытый заголовок сайта
const mainHeader = document
  .querySelector('.main-header');
mainHeader.style.background =
  'rgba( 144, 19, 254, 0.05 )';
mainHeader.style.boxShadow =
  '0 8px 32px 0 rgba( 31, 38, 135, 0.37 )';
mainHeader.style.backdropFilter =
  'blur( 5px )';
mainHeader.style.webkitBackdropFilter =
  'blur( 5px )';
//меняем изначальный логотип билимала на другой с анимацией
var logoElement = document
  .querySelector('.main-header-logo');
var newImage = document.createElement(
  'img');
newImage.src =
  "https://raw.githubusercontent.com/nxreehn/bilimalX/main/logo.png";
newImage.alt = "Bilimal Logo";
logoElement.textContent = '';
logoElement.appendChild(newImage);
newImage.addEventListener('click',
  function () {
    window.location.href =
      '/cabinet_teacher/';
  });
var styleElement = document
  .createElement('style');
styleElement.textContent = `
@-webkit-keyframes slide-in-blurred-left {
  0% {
    -webkit-transform: translateX(-1000px) scaleX(2.5) scaleY(0.2);
            transform: translateX(-1000px) scaleX(2.5) scaleY(0.2);
    -webkit-transform-origin: 100% 50%;
            transform-origin: 100% 50%;
    -webkit-filter: blur(40px);
            filter: blur(40px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateX(0) scaleY(1) scaleX(1);
            transform: translateX(0) scaleY(1) scaleX(1);
    -webkit-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    -webkit-filter: blur(0);
            filter: blur(0);
    opacity: 1;
  }
}

@keyframes slide-in-blurred-left {
  0% {
    -webkit-transform: translateX(-1000px) scaleX(2.5) scaleY(0.2);
            transform: translateX(-1000px) scaleX(2.5) scaleY(0.2);
    -webkit-transform-origin: 100% 50%;
            transform-origin: 100% 50%;
    -webkit-filter: blur(40px);
            filter: blur(40px);
    opacity: 0;
  }
  100% {
    -webkit-transform: translateX(0) scaleY(1) scaleX(1);
            transform: translateX(0) scaleY(1) scaleX(1);
    -webkit-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    -webkit-filter: blur(0);
            filter: blur(0);
    opacity: 1;
  }
}

.main-header-logo img {
  animation: slide-in-blurred-left 0.6s cubic-bezier(0.230, 1.000, 0.320, 1.000) both;
  width: 160px;
  height: auto;
}
`;
document.head.appendChild(styleElement);
//тут добавляем плюсик к сорам
document.querySelectorAll(
    'td.mark.current.sor')
  .forEach((e) => {
    const tasksDiv = e.querySelector(
      '#tasks');
    if (!e.querySelector(
        '.tooltipster.mark_symbol.is-update'
        ) && tasksDiv) {
      tasksDiv.innerHTML =
        '<div class="mark-plus">+</div>';
    } else if (!e.querySelector(
        '.tooltipster.mark_symbol.is-update'
        )) {
      e.insertAdjacentHTML(
        'beforeend',
        '<div id="tasks" style="display: flex; align-items: center; justify-content: flex-end; padding: 5px;" data-bg="none"><div class="mark-plus">+</div></div>'
        );
    }
  });
//плюсик для соч
document.querySelectorAll(
    'td.mark.current.soch')
  .forEach((e) => {
    const tasksDiv = e.querySelector(
      '#tasks');
    if (!e.querySelector(
        '.tooltipster.mark_symbol.is-update'
        ) && tasksDiv) {
      tasksDiv.innerHTML =
        '<div class="mark-plus">+</div>';
    } else if (!e.querySelector(
        '.tooltipster.mark_symbol.is-update'
        )) {
      e.insertAdjacentHTML(
        'beforeend',
        '<div id="tasks" style="display: flex; align-items: center; justify-content: flex-end; padding: 5px;" data-bg="none"><div class="mark-plus">+</div></div>'
        );
    }
  });
//плюсик ко всем текущим оценкам
document.querySelectorAll(
    'td.mark.current')
  .forEach((e) => {
    const tasksDiv = e.querySelector(
      '#tasks');
    if (!e.querySelector(
        '.tooltipster.mark_symbol.is-update'
        ) && tasksDiv) {
      tasksDiv.innerHTML =
        '<div class="mark-plus">+</div>';
    } else if (!e.querySelector(
        '.tooltipster.mark_symbol.is-update'
        )) {
      e.insertAdjacentHTML(
        'beforeend',
        '<div id="tasks" style="display: flex; align-items: center; justify-content: flex-end; padding: 5px;" data-bg="none"><div class="mark-plus">+</div></div>'
        );
    }
  });
//тут подключаем библиотеку свиталёртс чтобы показывать модальные окна
var sweetalert2 = document
  .createElement('script');
sweetalert2.src =
  'https://cdn.jsdelivr.net/npm/sweetalert2@11';
document.head.appendChild(sweetalert2);
//тут указываем разновидность модального окна (можно взять на сайте свиталёртс)
sweetalert2.onload = function () {
  function showAlert() {
    Swal.fire({
      title: 'Темы удачно скопированы!',
      icon: 'success',
      showConfirmButton: false,
      timer: 1500
    });
  }
  //создаем кнопку сохранить планы из ктп (для вставки в эксель)
  function addCopyButton() {
    const existingButton = document
      .querySelector(
        '.btn-copy-topics');
    if (existingButton) {
      return;
    }
    const button = document
      .createElement('button');
    button.innerText =
      'Копировать темы с этой четверти';
    button.classList.add('btn',
      'btn-green', 'btn-mini',
      'btn-copy-topics');
    button.style.marginLeft = '4px';
    button.addEventListener('click',
      function () {
        const names = document
          .querySelectorAll(
            ".ctp-view-lplan");
        const data = [];
        names.forEach(name => {
          const tagA = name
            .querySelector(
              'span');
          if (tagA) {
            const
              pullRightElement =
              tagA
              .querySelector(
                '.pull-right');
            if (
              pullRightElement) {
              pullRightElement
                .remove();
            }
            data.push(tagA
              .textContent
              .trim()
              .replace(
                /^\d+\.\s/, ''
                ));
          }
        });
        const joinedData = data
          .join('\n');
        const textarea = document
          .createElement(
          'textarea');
        textarea.value = joinedData;
        document.body.appendChild(
          textarea);
        textarea.select();
        document.execCommand(
        'copy');
        document.body.removeChild(
          textarea);
        showAlert();
      });
    const targetElement = document
      .querySelector(
        '.ctp-lplans .btn.btn-green.btn-mini'
        );
    if (targetElement) {
      targetElement.parentNode
        .insertBefore(button,
          targetElement.nextSibling);
    }
  }
  addCopyButton();
  const observer =
    new MutationObserver(function (
      mutations) {
      mutations.forEach(function (
        mutation) {
        if (mutation
          .addedNodes) {
          for (let i = 0; i <
            mutation.addedNodes
            .length; i++) {
            const node =
              mutation
              .addedNodes[i];
            if (node
              .classList && node
              .classList
              .contains(
                'ctp-view-lplan'
                )) {
              addCopyButton();
              break;
            }
          }
        }
      });
    });
  const config = {
    childList: true,
    subtree: true
  };
  observer.observe(document.body,
    config);
};
//выводим иконку плюсика справа от логотипа при клике на который будет показывается окно с уведомлением что удачно установлено расширение
const aboutScriptImage = document
  .createElement('img');
aboutScriptImage.src =
  'https://raw.githubusercontent.com/nxreehn/bilimalX/main/bilimalXIcon.png';
aboutScriptImage.style.width = '21px';
aboutScriptImage.style.height = '21px';
const rowElement = document
  .querySelector('.main-header-logo');
rowElement.appendChild(
aboutScriptImage);
//само окно уведолмения при клике на иконку плюсика
//тут будет показывается пара гифок с тенора, потом мб поменяю. (нет)
aboutScriptImage.addEventListener(
  'click', () => {
    Swal.fire({
      title: 'Скрипт установлен!',
      width: 600,
      height: 250,
      padding: '3em',
      color: '#fafbfc',
      background: '#fff url(https://media.tenor.com/vn2EsGbJ5yQAAAAC/ready-im-ready.gif)',
      backdrop: `
      rgba(0, 0, 255, 0.29)
      url("https://media.tenor.com/YxGsoypAdpAAAAAd/anger-management-jack-nicholson.gif")
      left top
      no-repeat
    `
    });
  });
//эта функция больше для праздничных дней. чтобы убрать картинки по краям в верхней панели сайта
var decorationLeft = document
  .querySelectorAll('.decoration-left');
decorationLeft.forEach(function (
  element) {
  element.remove();
});
var decorationRight = document
  .querySelectorAll(
  '.decoration-right');
decorationRight.forEach(function (
  element) {
  element.remove();
});
//эта хрень добавляет пункт в Главном меню в самом низу "О скрипте"
$(document)
  .ready(function () {
    var dropdown = $('.dropdown');
    if (dropdown.length > 0) {
      var lastItem = dropdown.find(
        'ul li:last-child');
      var newItem = $(
        '<li><a href="/bilimalplus">О Скрипте Bilimal Plus</a></li>'
        );
      lastItem.after(newItem);
    }
  });
//анимация радуги во дропдаун меню (главное меню)
function animateRainbowLink() {
  let link = document.querySelector(
    '.dropdown ul li:last-child a');
  let colors = ['#ff0000', '#ff8000',
    '#ffff00', '#80ff00', '#00ff80',
    '#00ffff', '#0080ff', '#0000ff',
    '#8000ff', '#ff00ff', '#ff0080'
  ];
  let currentIndex = 0;

  function changeColor() {
    link.style.color = colors[
      currentIndex];
    currentIndex = (currentIndex + 1) %
      colors.length;
    setTimeout(changeColor, 100);
  }
  changeColor();
}
animateRainbowLink();
//new function (copy hometasks and import hometasks)
var script = document.createElement(
  'script');
script.src =
  'https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.2/xlsx.full.min.js';
script.onload = function () {
  var addButton = document
    .querySelector(
      '.add_new_lplan#yw4');
  if (addButton) {
    var copyButton = document
      .createElement('a');
    copyButton.className =
      'copy_homework btn btn-success';
    copyButton.textContent =
      'Скопировать ДЗ';
    copyButton.id = 'copyButton';
    var importButton = document
      .createElement('a');
    importButton.className =
      'import_homework btn btn-green';
    importButton.textContent =
      'Импортировать ДЗ';
    importButton.id = 'importButton';
    copyButton.style.marginLeft =
      '10px';
    importButton.style.marginLeft =
      '10px';
    addButton.parentNode.insertBefore(
      copyButton, addButton
      .nextSibling);
    addButton.parentNode.insertBefore(
      importButton, copyButton
      .nextSibling);
    importButton.addEventListener(
      'click',
      function () {
        var fileInput = document
          .createElement('input');
        fileInput.type = 'file';
        fileInput.style.display =
          'none';
        document.body.appendChild(
          fileInput);
        fileInput.click();
        fileInput.addEventListener(
          'change',
          function () {
            var file = fileInput
              .files[0];
            var reader =
              new FileReader();
            reader.onload =
              function (e) {
                var data =
                  new Uint8Array(e
                    .target.result
                    );
                var workbook =
                  XLSX.read(
                  data, {
                    type: 'array'
                  });
                var sheetName =
                  workbook
                  .SheetNames[0];
                var sheet =
                  workbook.Sheets[
                    sheetName];
                var importedData =
                  XLSX.utils
                  .sheet_to_json(
                    sheet, {
                      header: 1
                    });
                var rows =
                  document
                  .querySelectorAll(
                    '#data_table tbody tr'
                    );

                function processRow(
                  index) {
                  if (index >=
                    importedData
                    .length) {
                    Swal.fire(
                      'Домашнее задание успешно импортировано!'
                      );
                    return;
                  }
                  var rowData =
                    importedData[
                      index];
                  var row = rows[
                    index];
                  if (!row) {
                    row = document
                      .createElement(
                        'tr');
                    row.id =
                      'importedRow_' +
                      index;
                    document
                      .querySelector(
                        '#data_table tbody'
                        )
                      .appendChild(
                        row);
                  }
                  var cell = row
                    .querySelector(
                      'td:nth-child(6)'
                      );
                  if (!cell) {
                    cell =
                      document
                      .createElement(
                        'td');
                    row
                      .appendChild(
                        cell);
                  }
                  var
                    homeworkValue =
                    rowData[0] ?
                    rowData[0] :
                    ''; // Проверка на существование значения
                  cell.innerHTML =
                    '<span class="tabledit-span">' +
                    homeworkValue +
                    '</span><input class="tabledit-input form-control input-sm" type="text" name="hometask" value="' +
                    homeworkValue +
                    '" style="display: none;" disabled="">';
                  // Сохраняем изменения
                  var editButton =
                    row
                    .querySelector(
                      '.tabledit-edit-button'
                      );
                  editButton
                    .click();
                  var saveButton =
                    row
                    .querySelector(
                      '.tabledit-save-button'
                      );
                  saveButton
                    .click();
                  setTimeout(
                    function () {
                      processRow
                        (index +
                          1);
                    }, 1000
                    ); // Таймаут 1 секунда
                }
                processRow(0);
              };
            reader
              .readAsArrayBuffer(
                file);
            document.body
              .removeChild(
                fileInput);
          });
      });
    copyButton.addEventListener(
      'click',
      function () {
        var rows = document
          .querySelectorAll(
            '#data_table tbody tr');
        var copiedData = '';
        rows.forEach(function (
        row) {
          var homeworkCell = row
            .querySelector(
              '.tabledit-view-mode:nth-child(6) .tabledit-span'
              );
          if (homeworkCell) {
            copiedData +=
              homeworkCell
              .textContent +
              '\n';
          }
        });
        navigator.clipboard
          .writeText(copiedData);
        Swal.fire('Отлично!',
          'Все домашние задания были успешно скопированы в буфер обмена.',
          'success');
      });
  }
};
document.body.appendChild(script);
// Создаем новую карточку с инфой о скрипте
var newCard = document.createElement(
  'div');
newCard.className =
  'col-3 start-menu-item';
newCard.innerHTML = `
    <div class="card">
        <a class="card-body media align-items-center" href="/bilimalplus">
            <img class="mr-3" src="https://raw.githubusercontent.com/nxreehn/bilimalX/main/bilimalXIcon.png" alt="" style="max-width: 48px; max-height: 48px;">
            <div class="media-body">О Bilimal Plus</div>
        </a>
    </div>
`;
var startMenu = document.querySelector(
  '.start-menu');
startMenu.appendChild(newCard);
///////////////////////////////
